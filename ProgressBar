public class ProgressBar {
    // --- Parámetros de ubicación y tamaño por defecto ---
    private static final int DEFAULT_X = 20;    // Más a la izquierda (ajusta si lo quieres más a la derecha)
    private static final int DEFAULT_Y = 160;   // MÁS ABAJO (ajusta este valor para moverla verticalmente)
    private static final int DEFAULT_WIDTH = 50; // Ancho de la barra
    private static final int DEFAULT_HEIGHT = 300; // Alto total

    private Rectangle bgBar;      // Fondo de la barra
    private Rectangle bar;        // Barra de progreso (ganancia)
    private int x, y;             // Esquina superior izquierda
    private int width, height;    // Dimensiones
    private int currentProfit;    // Ganancia actual
    private int maxProfit;        // Ganancia máxima posible

    /**
     * Crea una ProgressBar vertical en posición fija y tamaño fijo.
     * No requiere parámetros.
     */
    public ProgressBar() {
        this.x = DEFAULT_X;
        this.y = DEFAULT_Y;
        this.width = DEFAULT_WIDTH;
        this.height = DEFAULT_HEIGHT;
        this.currentProfit = 0;
        this.maxProfit = 1; // Evita división por cero

        // Fondo gris
        bgBar = new Rectangle();
        bgBar.changeColor("lightgray");
        bgBar.changeSize(height, width); // alto, ancho
        bgBar.setPosition(x, y);
        bgBar.makeVisible();

        // Barra azul (progreso)
        bar = new Rectangle();
        bar.changeColor("blue");
        bar.changeSize(0, width); // empieza vacía
        bar.setPosition(x, y + height); // empieza desde abajo
        bar.makeVisible();
    }

    /**
     * Actualiza el progreso de la barra.
     * @param currentProfit ganancia actual (número >= 0)
     * @param maxProfit ganancia máxima posible (número > 0)
     */
    public void setProgress(int currentProfit, int maxProfit) {
        this.currentProfit = Math.max(0, currentProfit);
        this.maxProfit = Math.max(1, maxProfit); // Nunca 0
        double frac = (double)this.currentProfit / this.maxProfit;
        frac = Math.max(0.0, Math.min(1.0, frac)); // Clamp entre 0 y 1

        int progHeight = (int)(height * frac);

        // La barra debe crecer de abajo hacia arriba
        bar.changeSize(progHeight, width);
        bar.setPosition(x, y + height - progHeight);
    }

    public void makeVisible() {
        bgBar.makeVisible();
        bar.makeVisible();
    }

    public void makeInvisible() {
        bgBar.makeInvisible();
        bar.makeInvisible();
    }
}
