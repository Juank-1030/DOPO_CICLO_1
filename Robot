import java.util.*;

/**
 * Robot representa un objeto compuesto (cabeza, ojos, boca) con color de cabeza aleatorio.
 * Permite: moverse (reposicionando todas las partes), hacerse visible/invisible
 * y un "blink" (parpadeo) simple alternando visibilidad.
 */
public class Robot {
    private String color;              
    private int positionX;             
    private int positionY;             
    private int size;                  
    private Rectangle robotHead;       
    private Circle leftEye;            
    private Circle rightEye;           
    private Rectangle mouth;
    private boolean isVisible;

    /**
     * Construye un robot con tamaño fijo y color aleatorio.
     * @param visible true para hacerlo visible tras construir
     */
    public Robot(boolean visible) {
        this.size = 15;
        this.positionX = 36; 
        this.positionY = 58;
        this.color = getRandomColor();

        String eyeAndMouthColor = (color.equals("black") || color.equals("brown")) ? "white" : "black";
        
        robotHead = new Rectangle();
        robotHead.changeColor(color);
        robotHead.changeSize(size, size);
        robotHead.setPosition(positionX, positionY);
        
        int eyeSize = size / 6;
        leftEye = new Circle();
        leftEye.changeColor(eyeAndMouthColor);
        leftEye.changeSize(eyeSize);
        leftEye.setPosition(positionX + size - 14, positionY + size / 4);
        
        rightEye = new Circle();
        rightEye.changeColor(eyeAndMouthColor);
        rightEye.changeSize(eyeSize);
        rightEye.setPosition(positionX + size - 4, positionY + size / 4);
        
        mouth = new Rectangle();
        mouth.changeColor(eyeAndMouthColor);
        mouth.changeSize(1, 10);
        mouth.setPosition(positionX + size / 6, positionY + size - (size / 10)-1);
        this.isVisible = visible;
        if (visible) {
            makeVisible();
        }
    }

    /**
     * Selecciona un color aleatorio para el robot.
     * @return color elegido
     */
    private String getRandomColor() {
        String[] colors = {"red", "blue", "green", "yellow", "magenta", "cyan", "black", "brown", "purple", "orange"};
        Random rand = new Random();
        return colors[rand.nextInt(colors.length)];
    }

    /**
     * Reposiciona el robot de forma absoluta y muestra sus componentes.
     * @param x nueva coordenada X
     * @param y nueva coordenada Y
     */
    public void moveTo(int x, int y) {
        positionX = x;
        positionY = y;
        robotHead.setPosition(positionX, positionY);
        leftEye.setPosition(positionX + size - 14, positionY + size / 4);
        rightEye.setPosition(positionX + size - 4, positionY + size / 4);
        mouth.setPosition(positionX + size / 6, positionY + size - (size / 10) - 1);
        robotHead.makeVisible();
        leftEye.makeVisible();
        rightEye.makeVisible();
        mouth.makeVisible();
    }

    /**
     * Hace visible el robot (todas sus partes) si no lo está.
     */
    public void makeVisible() {
        if (!isVisible) {
            robotHead.makeVisible();
            leftEye.makeVisible();
            rightEye.makeVisible();
            mouth.makeVisible();
            isVisible = true;
        }
    }

    /**
     * Hace invisible el robot (todas sus partes) si está visible.
     */
    public void makeInvisible() {
        if (isVisible) {
            robotHead.makeInvisible();
            leftEye.makeInvisible();
            rightEye.makeInvisible();
            mouth.makeInvisible();
            isVisible = false;
        }
    }

    /**
     * @return coordenada X actual.
     */
    public int getX() {
        return positionX;
    }

    /**
     * @return coordenada Y actual.
     */
    public int getY() {
        return positionY;
    }
    
    /**
     * Alterna visibilidad cada paso (parpadeo simple).
     * @param step número de paso (par = invisible, impar = visible)
     */
    public void blinkStep(int step) {
        if (step % 2 == 0) {
            makeInvisible();
        } else {
            makeVisible();
        }
    }
}
