import java.util.*;

public class Road {
    private ArrayList<Cell> cells;
    private int cellSize;
    private int gap;

    public Road(int cellSize, int gap) {
        this.cells = new ArrayList<>();
        this.cellSize = cellSize;
        this.gap = gap;
    }

    // Dibuja una espiral tipo "caracol" dejando espacio entre vueltas
    public void drawSpiral(int length) {
    Canvas canvas = Canvas.getCanvas();
    int canvasWidth = canvas.getSizeCanvasW();
    int canvasHeight = canvas.getSizeCanvasH();

    int cellSize = this.cellSize;
    int gap = this.gap;

    int step = cellSize + gap;
    int x0 = gap, y0 = gap;
    int maxCols = (canvasWidth - gap) / step;
    int maxRows = (canvasHeight - gap) / step;

    int left = 0, top = 0;
    int right = maxCols - 1, bottom = maxRows - 1;
    int i = 0;

    while (i < length && left <= right && top <= bottom) {
        // Top row: izquierda a derecha
        for (int col = left; col <= right && i < length; col++) {
            int x = x0 + col * step;
            int y = y0 + top * step;
            addCell(x, y);
            i++;
        }
        top += 2; // Salta una fila para dejar espacio

        // Right column: arriba a abajo
        for (int row = top - 1; row <= bottom && i < length; row++) {
            int x = x0 + right * step;
            int y = y0 + row * step;
            addCell(x, y);
            i++;
        }
        right -= 2; // Salta una columna para dejar espacio

        // Bottom row: derecha a izquierda
        for (int col = right + 1; col >= left && i < length; col--) {
            int x = x0 + col * step;
            int y = y0 + bottom * step;
            addCell(x, y);
            i++;
        }
        bottom -= 2; // Salta una fila para dejar espacio

        // Left column: abajo a arriba
        for (int row = bottom + 1; row >= top && i < length; row--) {
            int x = x0 + left * step;
            int y = y0 + row * step;
            addCell(x, y);
            i++;
        }
        left += 2; // Salta una columna para dejar espacio
    }
}

    private void addCell(int px, int py) {
        Cell cell = new Cell();
        cell.setPosition(px, py);
        cell.makeVisible();
        cells.add(cell);
    }

    public ArrayList<Cell> getCells() {
        return cells;
    }
}
